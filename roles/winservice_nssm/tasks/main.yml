---

## winservice_nssm_args:
##   nssm: ## optional, empty default
##   service: ## mandatory
##     create: ## mandatory
##       name:
##       application:
##       arguments:
##       working_directory:
##       description:
##       display_name:
##     config: ## optional

  - set_fact:
      _tmp_targs: >-
         {{ { 'name': 'nssm', 'state': 'latest' } 
          | combine(winservice_nssm_args.nssm | default({}, True)) }}

  - name: ensure nssm is avaible
    win_chocolatey: "{{ _tmp_targs }}"


##  - debug:
##      var: winservice_nssm_args.service.create


  - name: >-
      create win service wrapper ==> {{ winservice_nssm_args.service.create.name }}

    community.windows.win_nssm: "{{ winservice_nssm_args.service.create }}"


  - set_fact:
      _tmp_targs: >-
         {{ { 'name': winservice_nssm_args.service.create.name, 'state': 'started', 'start_mode': 'auto' } 
          | combine(winservice_nssm_args.service.config | default({}, True)) }}

  - name: >-
      configure new win service ==> {{ winservice_nssm_args.service.create.name }}
    win_service: "{{ _tmp_targs }}"

